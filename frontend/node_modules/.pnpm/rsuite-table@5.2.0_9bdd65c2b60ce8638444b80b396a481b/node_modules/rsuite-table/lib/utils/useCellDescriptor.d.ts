import React from 'react';
import { SortType, RowDataType } from '../@types/common';
interface CellDescriptorProps {
    children: React.ReactNode;
    rtl: boolean;
    minScrollX: React.RefObject<number>;
    scrollX: React.RefObject<number>;
    tableWidth: React.RefObject<number>;
    headerHeight: number;
    showHeader: boolean;
    sortType: SortType;
    defaultSortType: SortType;
    sortColumn: string;
    prefix?: (str: string) => string;
    onSortColumn: (dataKey: string, sortType?: SortType) => void;
    rowHeight: number | ((rowData?: RowDataType) => number);
    mouseAreaRef: React.RefObject<HTMLDivElement>;
    tableRef: React.RefObject<HTMLDivElement>;
}
interface CellDescriptor {
    headerCells: any[];
    bodyCells: any[];
    hasCustomTreeCol: boolean;
    allColumnsWidth: number;
}
/**
 * Attach rendering-related attributes to all cells of the form and cache them.
 * @param props
 * @returns
 */
declare const useCellDescriptor: (props: CellDescriptorProps) => CellDescriptor;
export default useCellDescriptor;
